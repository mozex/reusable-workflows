name: Tests

on:
  workflow_call:
    secrets:
      TOKEN:
        required: false
        description: 'GitHub Token used to install Composer dependencies.'
    inputs:
      php_version:
        description: 'PHP version to be used.'
        required: false
        type: string
        default: '8.3'
      phpunit_config_file:
        description: 'PHPUnit configuration file.'
        required: false
        type: string
        default: 'phpunit.xml'
      custom_commands:
        description: 'Custom commands to run.'
        required: false
        type: string
        default: ''
      databases:
        description: 'Comma-separated list of database names to create'
        required: false
        type: string
        default: 'testing'

permissions:
  contents: write

jobs:
  pest:
    if: "!contains(github.event.head_commit.message, 'wip')"
    name: Pest
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Custom Commands
        if: "inputs.custom_commands != ''"
        run: ${{ inputs.custom_commands }}

      - name: Prepare The Environment
        run: cp .env.example .env

      - name: Create Database
        run: |
          sudo systemctl start mysql
          IFS=',' read -ra DB_NAMES <<< "${{ inputs.databases }}"
          for DB_NAME in "${DB_NAMES[@]}"; do
            mysql --user="root" --password="root" -e "CREATE DATABASE \`$DB_NAME\` character set UTF8mb4 collate utf8mb4_bin;"
            echo "Created database: $DB_NAME"
          done

      - name: Install Composer Dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--prefer-dist --optimize-autoloader"
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.TOKEN }}"}}'

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Setup Vite Manifest
        run: |
          yarn
          yarn build

      - name: Run Tests
        run: ./vendor/bin/pest --ci -c ${{ inputs.phpunit_config_file }} --parallel --processes=2 --colors=always
